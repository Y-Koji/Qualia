// Generated by CoffeeScript 1.9.2
(function() {
  $(function() {
    var ViewModel;
    window.current = '/';
    window.root = location.href.replace(/(https?:\/\/[^\/]*)\/.*\//, '$1/');
    ViewModel = (function() {
      function ViewModel() {
        var self;
        self = this;
        this.ls = ko.observableArray();
        this.pwd = ko.observableArray();
        this.load = function(path) {
          self.ls.splice(0, self.ls().length);
          return $.ajax({
            method: 'GET',
            url: '/api/ls.json',
            data: {
              path: path
            }
          }).done(function(data) {
            var current, dir, file, i, j, k, len, len1, len2, ref, ref1, tree;
            current = root + path;
            tree = current.match(root);
            self.pwd.splice(0, self.pwd().length);
            console.log(tree);
            for (i = 0, len = tree.length; i < len; i++) {
              dir = tree[i];
              self.pwd.push(dir);
            }
            ref = data.dirs;
            for (j = 0, len1 = ref.length; j < len1; j++) {
              dir = ref[j];
              self.ls.push({
                type: 'directory',
                data: dir
              });
            }
            ref1 = data.files;
            for (k = 0, len2 = ref1.length; k < len2; k++) {
              file = ref1[k];
              path = current + '/' + file.name;
              self.ls.push({
                type: 'file',
                data: file
              });
            }
            return $('a').click(function() {
              var name, type;
              type = $(this).parent().parent().attr('class');
              name = $(this).text();
              switch (type) {
                case 'directory':
                  VM.load(current.substring(root.length) + '/' + name);
                  break;
                case 'file':
                  window.open(current + '/' + name);
                  break;
              }
              return false;
            });
          });
        };
      }

      return ViewModel;

    })();
    ko.applyBindings(window.VM = new ViewModel());
    return VM.load(current);
  });

}).call(this);

//# sourceMappingURL=index.js.map
